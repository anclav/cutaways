class Command {
  constructor(props) {
    const {
      name, command, paramSize, helper,
    } = props;

    this.name = name;
    this.command = command;
    this.paramSize = paramSize;
    this.helper = helper;
  }

  get(params) {
    if (params === undefined) return this.command;
    return this.command.replace(/%0%/gm, params[0]).replace(/%1%/gm, params[1]);
  }
}

const commands = {
  setMain: new Command({
    name: 'Назначение номера для передачи sms-данных',
    command: 'Number1 %0%',
    paramSize: 1,
    helper:
      'Назначение основного номера телефона для оповещения. На этот номер приходят все виды сообщений в формате SMS.',
  }),
  setIP: new Command({
    name: 'Задать IP-адрес сервера для передачи данных по GPRS',
    command: 'Gprs ip "%0%","%1%"',
    paramSize: 2,
    helper: 'Задать IP-адрес и номер порта сервера, на который будут передаваться данные по GPRS.',
  }),
  getStatus: new Command({
    name: 'Запрос местоположения',
    command: 'Get status',
    paramSize: 0,
    helper:
      'Команда предназначена для запроса текущего местоположения. Либо можно позвонить на сотовый номер устройства. Примерно, через 30 сек, устройство пришлёт данные, о своём текущем местоположении.',
  }),
  find: new Command({
    name: 'Уточнение местоположения',
    command: 'Gps find',
    paramSize: 0,
    helper:
      'В случае, если объект находится в зоне слабого приёма GPS сигналов (помещения, в близи источников помех), точность определения местоположения ухудшаться. Иногда может понадобиться, уточнить местоположение. Для этого нажмите "Уточнение местоположения", и примерно через 5 минут устройство пришлёт полученные данные.',
  }),
  online: new Command({
    name: 'Передача местоположения при движении',
    command: 'Online mode %0%',
    paramSize: 1,
    helper:
      'Если необходимо постоянно видеть на карте, текущее местоположение устройства, включите режим онлайн. При включении данного режима, устройство, во время движения, будет автоматически передавать данные, с заданной периодичностью.',
  }),
  tracking: new Command({
    name: 'Передача местоположения через интервалы',
    command: 'Track mode %0%',
    paramSize: 1,
    helper:
      'Режим предназначен для передачи местоположения, например раз в час, или раз в несколько часов. Передача местоположения, происходит не зависимо от того, в активном режиме работает устройство или нет, а так же двигается или нет.',
  }),
  charger: new Command({
    name: 'Оповещение о подключении зарядного устройства',
    command: 'Power mess %0%',
    paramSize: 1,
    helper: 'Передавать сообщения о подключении/отключении внешнего питания или ЗУ',
  }),
  checkpoint: new Command({
    name: 'Передача местоположения по прибытию/отправлению',
    command: 'Checkpoint %0%',
    paramSize: 1,
    helper:
      'Если необходимо контролировать места пребывания объекта, а так же фиксировать время прибытия и время отправления из этих мест – включите данную функцию.',
  }),
  moving: new Command({
    name: 'Передача местоположения по движению',
    command: 'Move %0%',
    paramSize: 1,
    helper:
      'Если объект не двигался более 5-ти минут, то при начале движения, будет передано текущее местоположение.',
  }),
  stopped: new Command({
    name: 'Передача местоположения по остановке',
    command: 'Stop %0%',
    paramSize: 1,
    helper: 'Если движение отсутствует более 5-ти минут, будет передано текущее местоположение.',
  }),
  timer1: new Command({
    name: 'Передача местоположения в заданное время',
    command: 'Status time 1 %0%',
    paramSize: 1,
    helper:
      'Режим предназначен для передачи местоположения, раз в сутки в заданное время.Режим можно использовать совместно со "спящим" режимом. Таймеров всего два.',
  }),
  timer2: new Command({
    name: 'Передача местоположения в заданное время',
    command: 'Status time 2 %0%',
    paramSize: 1,
    helper:
      'Режим предназначен для передачи местоположения, раз в сутки в заданное время.Режим можно использовать совместно со "спящим" режимом. Таймеров всего два.',
  }),
  getTrack: new Command({
    name: 'Выгрузка трека по запросу',
    command: 'Get track',
    paramSize: 1,
    helper:
      'Устройство, при движении, постоянно записывает во внутреннюю память треки (пройденные маршруты). Треки записываются в память циклически, т.е. новые данные затирают старые данные. Данная функция позволяет выгрузить трек "вручную".',
  }),
  overflow: new Command({
    name: 'Выгрузка трека автоматически по заполнению памяти',
    command: 'Track autosend %0%',
    paramSize: 1,
    helper: 'Если движение отсутствует более 5-ти минут, будет передано текущее местоположение.',
  }),
  trackTimer: new Command({
    name: 'Выгрузка трека в заданное время',
    command: 'Status time 3 %0%',
    paramSize: 1,
    helper: 'Если движение отсутствует более 5-ти минут, будет передано текущее местоположение.',
  }),
  powerSaving: new Command({
    name: 'Экономный режим работы GPS',
    command: 'Gps %0%',
    paramSize: 1,
    helper:
      'В данном режиме, точное определение местоположения производится постоянно. А так же постоянно производится запись трека в память устройства.',
  }),
};

export default commands;
